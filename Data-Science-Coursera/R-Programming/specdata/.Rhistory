# Get the complete observations from all the files
ca <- complete(directory)
# Select the cases with number of observations greater than threshold
cc <- ca[ca["nobs"]>threshold, ]
corVec <- NULL
for(i in 001 ){
fullData <- read.csv(paste(directory, "/", formatC(i, width = 3, flag = "0"), ".csv", sep = ""),colClasses = c("NULL",NA,NA,"NULL"))
completeData<-fullData[complete.cases(fullData),]
print(class(completeData))
corVec <- c(corVec,cor(completeData$nitrate,completeData$sulphate))
print(corVec)
}
#return(corr1)
}
corr(".",150)
corr <- function(directory,threshold=0){
# Get the complete observations from all the files
ca <- complete(directory)
# Select the cases with number of observations greater than threshold
cc <- ca[ca["nobs"]>threshold, ]
corVec <- NULL
for(i in 001 ){
fullData <- read.csv(paste(directory, "/", formatC(i, width = 3, flag = "0"), ".csv", sep = ""),colClasses = c("NULL",NA,NA,"NULL"))
completeData<-fullData[complete.cases(fullData),]
completeData$sulphate
corVec <- c(corVec,cor(completeData$nitrate,completeData$sulphate))
print(corVec)
}
#return(corr1)
}
corr(".",150)
corr <- function(directory,threshold=0){
# Get the complete observations from all the files
ca <- complete(directory)
# Select the cases with number of observations greater than threshold
cc <- ca[ca["nobs"]>threshold, ]
corVec <- NULL
for(i in 001 ){
fullData <- read.csv(paste(directory, "/", formatC(i, width = 3, flag = "0"), ".csv", sep = ""),colClasses = c("NULL",NA,NA,"NULL"))
completeData<-fullData[complete.cases(fullData),]
print(completeData$sulphate)
corVec <- c(corVec,cor(completeData$nitrate,completeData$sulphate))
print(corVec)
}
#return(corr1)
}
corr(".",150)
corr <- function(directory,threshold=0){
# Get the complete observations from all the files
ca <- complete(directory)
# Select the cases with number of observations greater than threshold
cc <- ca[ca["nobs"]>threshold, ]
corVec <- NULL
for(i in 001 ){
fullData <- read.csv(paste(directory, "/", formatC(i, width = 3, flag = "0"), ".csv", sep = ""),colClasses = c("NULL",NA,NA,"NULL"))
corVec <- c(corVec,cor(fullData$nitrate,fullData$sulphate, na.rm=TRUE))
print(corVec)
}
#return(corr1)
}
corr(".",150)
corr <- function(directory,threshold=0){
# Get the complete observations from all the files
ca <- complete(directory)
# Select the cases with number of observations greater than threshold
cc <- ca[ca["nobs"]>threshold, ]
corVec <- NULL
for(i in 001 ){
fullData <- read.csv(paste(directory, "/", formatC(i, width = 3, flag = "0"), ".csv", sep = ""),colClasses = c("NULL",NA,NA,"NULL"))
completeData <- complete.cases(fullData)
corVec <- c(corVec,cor(completeData$nitrate,completeData$sulphate))
print(corVec)
}
#return(corr1)
}
corr(".",150)
corr <- function(directory,threshold=0){
# Get the complete observations from all the files
ca <- complete(directory)
# Select the cases with number of observations greater than threshold
cc <- ca[ca["nobs"]>threshold, ]
corVec <- NULL
for(i in 001 ){
fullData <- read.csv(paste(directory, "/", formatC(i, width = 3, flag = "0"), ".csv", sep = ""),colClasses = c("NULL",NA,NA,"NULL"))
completeData <- complete.cases(fullData)
corVec <- c(corVec,cor(completeData[nitrate],completeData[sulphate]))
print(corVec)
}
#return(corr1)
}
corr(".",150)
corr <- function(directory,threshold=0){
# Get the complete observations from all the files
ca <- complete(directory)
# Select the cases with number of observations greater than threshold
cc <- ca[ca["nobs"]>threshold, ]
corVec <- NULL
for(i in 001 ){
fullData <- read.csv(paste(directory, "/", formatC(i, width = 3, flag = "0"), ".csv", sep = ""),colClasses = c("NULL",NA,NA,"NULL"))
completeData <- complete.cases(fullData)
print(completeData[sulphate])
corVec <- c(corVec,cor(completeData[nitrate],completeData[sulphate]))
print(corVec)
}
#return(corr1)
}
corr(".",150)
corr <- function(directory,threshold=0){
# Get the complete observations from all the files
ca <- complete(directory)
# Select the cases with number of observations greater than threshold
cc <- ca[ca["nobs"]>threshold, ]
corVec <- NULL
for(i in 001 ){
fullData <- read.csv(paste(directory, "/", formatC(i, width = 3, flag = "0"), ".csv", sep = ""))
completeData <- complete.cases(fullData)
print(completeData[sulphate])
corVec <- c(corVec,cor(completeData[nitrate],completeData[sulphate]))
print(corVec)
}
#return(corr1)
}
corr(".",150)
corr <- function(directory,threshold=0){
# Get the complete observations from all the files
ca <- complete(directory)
# Select the cases with number of observations greater than threshold
cc <- ca[ca["nobs"]>threshold, ]
corVec <- NULL
for(i in 001 ){
fullData <- read.csv(paste(directory, "/", formatC(i, width = 3, flag = "0"), ".csv", sep = ""))
completeData <- complete.cases(fullData)
print(completeData[sulfate])
corVec <- c(corVec,cor(completeData[nitrate],completeData[sulfate]))
print(corVec)
}
#return(corr1)
}
corr(".",150)
corr <- function(directory,threshold=0){
# Get the complete observations from all the files
ca <- complete(directory)
# Select the cases with number of observations greater than threshold
cc <- ca[ca["nobs"]>threshold, ]
corVec <- NULL
for(i in 001 ){
fullData <- read.csv(paste(directory, "/", formatC(i, width = 3, flag = "0"), ".csv", sep = ""))
print(fullData[sulfate])
completeData <- complete.cases(fullData)
print(completeData[sulfate])
corVec <- c(corVec,cor(completeData[nitrate],completeData[sulfate]))
print(corVec)
}
#return(corr1)
}
corr(".",150)
corr <- function(directory,threshold=0){
# Get the complete observations from all the files
ca <- complete(directory)
# Select the cases with number of observations greater than threshold
cc <- ca[ca["nobs"]>threshold, ]
corVec <- NULL
for(i in 001 ){
fullData <- read.csv(paste(directory, "/", formatC(i, width = 3, flag = "0"), ".csv", sep = ""))
print(fullData)
completeData <- complete.cases(fullData)
print(completeData[sulfate])
corVec <- c(corVec,cor(completeData[nitrate],completeData[sulfate]))
print(corVec)
}
#return(corr1)
}
corr(".",150)
corr <- function(directory,threshold=0){
# Get the complete observations from all the files
ca <- complete(directory)
# Select the cases with number of observations greater than threshold
cc <- ca[ca["nobs"]>threshold, ]
corVec <- NULL
for(i in 001 ){
fullData <- read.csv(paste(directory, "/", formatC(i, width = 3, flag = "0"), ".csv", sep = ""))
print(fullData$sulfate)
completeData <- complete.cases(fullData)
print(completeData[sulfate])
corVec <- c(corVec,cor(completeData[nitrate],completeData[sulfate]))
print(corVec)
}
#return(corr1)
}
corr(".",150)
fullData <- read.csv(paste(".", "/", formatC(001, width = 3, flag = "0"), ".csv", sep = ""))
fullData(nitrate)
fullData[nitrate]
fullData$nitrate
fullData[1]
fullData[2]
fullData[3]
fullData[[nitrate]]
fullData[[$nitrate]]
fullData[nitrate
]
fullData$nitrate
[[fullData$nitrate]]
[fullData$nitrate]
corr <- function(directory,threshold=0){
# Get the complete observations from all the files
ca <- complete(directory)
# Select the cases with number of observations greater than threshold
cc <- ca[ca["nobs"]>threshold, ]
corVec <- NULL
for(i in 001 ){
fullData <- read.csv(paste(directory, "/", formatC(i, width = 3, flag = "0"), ".csv", sep = ""))
completeData <- complete.cases(fullData)
corVec <- c(corVec,cor(completeData[2],completeData[3]))
print(corVec)
}
#return(corr1)
}
corr(".",150)
corr <- function(directory,threshold=0){
# Get the complete observations from all the files
ca <- complete(directory)
# Select the cases with number of observations greater than threshold
cc <- ca[ca["nobs"]>threshold, ]
corVec <- NULL
for(i in 001 ){
fullData <- read.csv(paste(directory, "/", formatC(i, width = 3, flag = "0"), ".csv", sep = ""))
completeData <- complete.cases(fullData)
print (cor(completeData[2],completeData[3]))
corVec <- c(corVec,cor(completeData[2],completeData[3]))
print(corVec)
}
#return(corr1)
}
corr(".",150)
corr <- function(directory,threshold=0){
# Get the complete observations from all the files
ca <- complete(directory)
# Select the cases with number of observations greater than threshold
cc <- ca[ca["nobs"]>threshold, ]
corVec <- NULL
for(i in 001 ){
fullData <- read.csv(paste(directory, "/", formatC(i, width = 3, flag = "0"), ".csv", sep = ""))
completeData <- complete.cases(fullData)
print (completeData)
print (cor(completeData[2],completeData[3]))
corVec <- c(corVec,cor(completeData[2],completeData[3]))
print(corVec)
}
#return(corr1)
}
corr(".",150)
corr <- function(directory,threshold=0){
# Get the complete observations from all the files
ca <- complete(directory)
# Select the cases with number of observations greater than threshold
cc <- ca[ca["nobs"]>threshold, ]
corVec <- NULL
for(i in 001 ){
fullData <- read.csv(paste(directory, "/", formatC(i, width = 3, flag = "0"), ".csv", sep = ""))
completeData <- fullData[complete.cases(fullData)]
print (completeData)
print (cor(completeData[2],completeData[3]))
corVec <- c(corVec,cor(completeData[2],completeData[3]))
print(corVec)
}
#return(corr1)
}
corr(".",150)
fullData
fullData[complete.cases(fullData)]
fullData[complete.cases(fullData),]
corr <- function(directory,threshold=0){
# Get the complete observations from all the files
ca <- complete(directory)
# Select the cases with number of observations greater than threshold
cc <- ca[ca["nobs"]>threshold, ]
corVec <- NULL
for(i in 001 ){
fullData <- read.csv(paste(directory, "/", formatC(i, width = 3, flag = "0"), ".csv", sep = ""))
completeData <- fullData[complete.cases(fullData),]
print (completeData)
print (cor(completeData[2],completeData[3]))
corVec <- c(corVec,cor(completeData[2],completeData[3]))
print(corVec)
}
#return(corr1)
}
corr(".",150)
corr <- function(directory,threshold=0){
# Get the complete observations from all the files
ca <- complete(directory)
# Select the cases with number of observations greater than threshold
cc <- ca[ca["nobs"]>threshold, ]
corVec <- NULL
for(i in cc$id ){
fullData <- read.csv(paste(directory, "/", formatC(i, width = 3, flag = "0"), ".csv", sep = ""))
completeData <- fullData[complete.cases(fullData),]
corVec <- c(corVec,cor(completeData[2],completeData[3]))
print(corVec)
}
#return(corr1)
}
corr(".",150)
corr <- function(directory,threshold=0){
# Get the complete observations from all the files
ca <- complete(directory)
# Select the cases with number of observations greater than threshold
cc <- ca[ca["nobs"]>threshold, ]
corVec <- NULL
for(i in cc$id ){
fullData <- read.csv(paste(directory, "/", formatC(i, width = 3, flag = "0"), ".csv", sep = ""))
completeData <- fullData[complete.cases(fullData),]
corVec <- c(corVec,cor(completeData[2],completeData[3]))
}
return(corVec)
}
corr(".",150)
head(corr
)
corrrrr<-corr(".",150)
head(corrrrr)
pollutantmean <- function(directory,pollutant,id) {
col1 <- if(pollutant == "sulphate"){
c("NULL", NA, "NULL", "NULL")
}else if(pollutant == "nitrate"){
c("NULL","NULL",NA,"NULL")
}
## Construct a list of files names
files <- sprintf ("%s/%03d.csv",directory,id)
## Read the pollutant data and unlist to compute the mean
x <- lapply (files, read.csv,colClasses=col1)
mean (unlist(x), na.rm = TRUE)
## apply(x,2,mean,na.rm=TRUE)
}
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean(".", "sulfate", 1:10)
pollutantmean <- function(directory,pollutant,id) {
col1 <- if(pollutant == "sulphate"){
c("NULL", NA, "NULL", "NULL")
}else if(pollutant == "nitrate"){
c("NULL","NULL",NA,"NULL")
}
## Construct a list of files names
files <- sprintf ("%s/%03d.csv",directory,id)
## Read the pollutant data and unlist to compute the mean
x <- lapply (files, read.csv,colClasses=col1)
mean (unlist(x), na.rm = TRUE)
## apply(x,2,mean,na.rm=TRUE)
}
pollutantmean(".", "sulfate", 1:10)
pollutantmean <- function(directory,pollutant,id) {
col1 <- if(pollutant == "sulfate"){
c("NULL", NA, "NULL", "NULL")
}else if(pollutant == "nitrate"){
c("NULL","NULL",NA,"NULL")
}
## Construct a list of files names
files <- sprintf ("%s/%03d.csv",directory,id)
## Read the pollutant data and unlist to compute the mean
x <- lapply (files, read.csv,colClasses=col1)
mean (unlist(x), na.rm = TRUE)
## apply(x,2,mean,na.rm=TRUE)
}
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("."), "sulfate", 1:10)
pollutantmean(".", "sulfate", 1:10)
pollutantmean(".", "nitrate", 70:72)
pollutantmean(".", "nitrate", 23)
complete <- function(directory, id=1:332) {
nobs <- function(id) {
path <- file.path(directory, paste(sprintf("%03d", as.numeric(id)), ".csv", sep=""))
#return(lapply(path,function(x) sum(complete.cases(read.csv(x)))))
return (sum(complete.cases(read.csv(path))))
}
return (data.frame(id=id, nobs=sapply(id, nobs)))
}
complete(".", 1)
complete(".", c(2, 4, 8, 10, 12))
complete(".", 30:25)
complete(".", 3)
corr <- function(directory,threshold=0){
# Get the complete observations from all the files
ca <- complete(directory)
# Select the cases with number of observations greater than threshold
cc <- ca[ca["nobs"]>threshold, ]
corVec <- NULL
for(i in cc$id ){
fullData <- read.csv(paste(directory, "/", formatC(i, width = 3, flag = "0"), ".csv", sep = ""))
completeData <- fullData[complete.cases(fullData),]
corVec <- c(corVec,cor(completeData[2],completeData[3]))
}
return(corVec)
}
cr <- corr(".", 150)
head(cr)
summary(cr)
cr <- corr("specdata", 400)
cr <- corr(".", 400)
head(cr)
summary(cr)
cr <- corr(".", 5000)
head(cr)
summary(cr)
corr <- function(directory, threshold = 0) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'threshold' is a numeric vector of length 1 indicating the
## number of completely observed observations (on all
## variables) required to compute the correlation between
## nitrate and sulfate; the default is 0
## Return a numeric vector of correlations
## NOTE: Do not round the result!
## Construct a list of files names
fileList <- list.files(path=directory, pattern="*.csv")
files <- sprintf ("%s/%s",directory,fileList)
## Read the pollutant data in a matrix format
x <- sapply (files, read.csv, simplify = TRUE, USE.NAMES=TRUE)
nobs <- NULL
cr <- NULL
for (i in 1:length(fileList)) {
nobs <- c(nobs, sum(complete.cases(x[,i])))
if (nobs[i] > threshold) {
cr = c(cr, cor(unlist(x[,i][2]), unlist(x[,i][3]), use = "complete.obs"))
}
}
cr
}
cr <- corr(".", 5000)
summary(cr)
length(cr)
corr <- function(directory,threshold=0){
# Get the complete observations from all the files
ca <- complete(directory)
# Select the cases with number of observations greater than threshold
cc <- ca[ca["nobs"]>threshold, ]
corVec <- NULL
for(i in cc$id ){
fullData <- read.csv(paste(directory, "/", formatC(i, width = 3, flag = "0"), ".csv", sep = ""))
completeData <- fullData[complete.cases(fullData),]
corVec <- c(corVec,cor(completeData[2],completeData[3]))
}
return(corVec)
}
length(cr)
cr <- corr(".")
summary(cr)
length(cr)
x <- lapply (files, read.csv,colClasses=col1)
pollutantmean <- function(directory,pollutant,id) {
col1 <- if(pollutant == "sulfate"){
c("NULL", NA, "NULL", "NULL")
}else if(pollutant == "nitrate"){
c("NULL","NULL",NA,"NULL")
}
## Construct a list of files names
files <- sprintf ("%s/%03d.csv",directory,id)
## Read the pollutant data and unlist to compute the mean
x <- lapply (files, read.csv,colClasses=col1)
mean (unlist(x), na.rm = TRUE)
## apply(x,2,mean,na.rm=TRUE)
}
pollutantmean(".", "sulfate", 1:10)
pollutantmean(".", "nitrate", 70:72)
pollutantmean(".", "sulfate", 34)
pollutantmean <- function(directory,pollutant,id=1:332) {
col1 <- if(pollutant == "sulfate"){
c("NULL", NA, "NULL", "NULL")
}else if(pollutant == "nitrate"){
c("NULL","NULL",NA,"NULL")
}
## Construct a list of files names
files <- sprintf ("%s/%03d.csv",directory,id)
## Read the pollutant data and unlist to compute the mean
x <- lapply (files, read.csv,colClasses=col1)
mean (unlist(x), na.rm = TRUE)
## apply(x,2,mean,na.rm=TRUE)
}
pollutantmean("specdata", "nitrate")
pollutantmean(".", "nitrate")
complete <- function(directory, id=1:332) {
nobs <- function(id) {
path <- file.path(directory, paste(sprintf("%03d", as.numeric(id)), ".csv", sep=""))
#return(lapply(path,function(x) sum(complete.cases(read.csv(x)))))
return (sum(complete.cases(read.csv(path))))
}
return (data.frame(id=id, nobs=sapply(id, nobs)))
}
cc <- complete(".", c(6, 10, 20, 34, 100, 200, 310))
print(cc$nobs)
cc <- complete(".", 54)
print(cc$nobs)
set.seed(42)
cc <- complete(".", 332:1)
use <- sample(332, 10)
print(cc[use, "nobs"])
cr <- corr(".")
cr <- sort(cr)
set.seed(868)
out <- round(cr[sample(length(cr), 5)], 4)
print(out)
cr <- corr(".", 129)
cr <- sort(cr)
n <- length(cr)
set.seed(197)
out <- c(n, round(cr[sample(n, 5)], 4))
print(out)
cr <- corr(".", 2000)
n <- length(cr)
cr <- corr(".", 1000)
cr <- sort(cr)
print(c(n, round(cr, 4)))
